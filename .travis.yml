sudo: required
dist: focal
language: generic
mono: none
services:
  - docker

cache:
  directories:
    - $HOME/.nuget/packages
    - $HOME/.local/share/NuGet/v3-cache

before_install:
  - cd .
  - echo "We are in the right folder!"
  - sudo apt-get update
  - sudo apt-get install -y apt-transport-https
  - sudo snap install dotnet-sdk --classic --channel 8.0/stable
  - dotnet restore "./Project/RestWithASPNET.csproj"

script:
  - cd ./Project
  # Build da imagem da API
  - docker build --no-cache -t rest-with-asp-net:latest .
  # Volta para a pasta raiz para build do banco de dados
  - cd ..
  # Build da imagem do banco de dados
  - docker build --no-cache -t rest-with-asp-net-db:latest -f db/Dockerfile .

before_deploy:
  # Login no Docker Hub
  - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin

  # Deploy da imagem da API
  - git checkout main
  - docker tag rest-with-asp-net:latest $DOCKER_USERNAME/rest-with-asp-net:latest-$(date +%s)
  - docker push $DOCKER_USERNAME/rest-with-asp-net:latest-$(date +%s)

  # Deploy da imagem do banco de dados
  - docker tag rest-with-asp-net-db:latest $DOCKER_USERNAME/rest-with-asp-net-db:latest-$(date +%s)
  - docker push $DOCKER_USERNAME/rest-with-asp-net-db:latest-$(date +%s)

deploy:
  provider: script
  script:
    - echo "Deployed"
  on:
    branch: main

notifications:
  email: false